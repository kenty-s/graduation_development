<mxfile host="app.diagrams.net" agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36" version="28.1.2">
  <diagram id="R2lEEEUBdFMjLlhIrx00" name="Page-1">
    <mxGraphModel dx="974" dy="422" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0" extFonts="Permanent Marker^https://fonts.googleapis.com/css?family=Permanent+Marker">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="C-vyLk0tnHw3VtMMgP7b-1" value="" style="edgeStyle=entityRelationEdgeStyle;endArrow=ERzeroToMany;startArrow=ERone;endFill=1;startFill=0;" parent="1" source="C-vyLk0tnHw3VtMMgP7b-24" target="C-vyLk0tnHw3VtMMgP7b-6" edge="1">
          <mxGeometry width="100" height="100" relative="1" as="geometry">
            <mxPoint x="340" y="720" as="sourcePoint" />
            <mxPoint x="440" y="620" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="C-vyLk0tnHw3VtMMgP7b-12" value="" style="edgeStyle=entityRelationEdgeStyle;endArrow=ERzeroToMany;startArrow=ERone;endFill=1;startFill=0;" parent="1" source="C-vyLk0tnHw3VtMMgP7b-3" target="C-vyLk0tnHw3VtMMgP7b-17" edge="1">
          <mxGeometry width="100" height="100" relative="1" as="geometry">
            <mxPoint x="400" y="180" as="sourcePoint" />
            <mxPoint x="460" y="205" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="C-vyLk0tnHw3VtMMgP7b-2" value="Orders" style="shape=table;startSize=30;container=1;collapsible=1;childLayout=tableLayout;fixedRows=1;rowLines=0;fontStyle=1;align=center;resizeLast=1;" parent="1" vertex="1">
          <mxGeometry x="450" y="120" width="250" height="130" as="geometry" />
        </mxCell>
        <mxCell id="C-vyLk0tnHw3VtMMgP7b-3" value="" style="shape=partialRectangle;collapsible=0;dropTarget=0;pointerEvents=0;fillColor=none;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=1;" parent="C-vyLk0tnHw3VtMMgP7b-2" vertex="1">
          <mxGeometry y="30" width="250" height="30" as="geometry" />
        </mxCell>
        <mxCell id="C-vyLk0tnHw3VtMMgP7b-4" value="PK" style="shape=partialRectangle;overflow=hidden;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;fontStyle=1;" parent="C-vyLk0tnHw3VtMMgP7b-3" vertex="1">
          <mxGeometry width="30" height="30" as="geometry" />
        </mxCell>
        <mxCell id="C-vyLk0tnHw3VtMMgP7b-5" value="order_id int NOT NULL " style="shape=partialRectangle;overflow=hidden;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;fontStyle=5;" parent="C-vyLk0tnHw3VtMMgP7b-3" vertex="1">
          <mxGeometry x="30" width="220" height="30" as="geometry" />
        </mxCell>
        <mxCell id="C-vyLk0tnHw3VtMMgP7b-6" value="" style="shape=partialRectangle;collapsible=0;dropTarget=0;pointerEvents=0;fillColor=none;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="C-vyLk0tnHw3VtMMgP7b-2" vertex="1">
          <mxGeometry y="60" width="250" height="30" as="geometry" />
        </mxCell>
        <mxCell id="C-vyLk0tnHw3VtMMgP7b-7" value="FK1" style="shape=partialRectangle;overflow=hidden;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;" parent="C-vyLk0tnHw3VtMMgP7b-6" vertex="1">
          <mxGeometry width="30" height="30" as="geometry" />
        </mxCell>
        <mxCell id="C-vyLk0tnHw3VtMMgP7b-8" value="customer_id int NOT NULL" style="shape=partialRectangle;overflow=hidden;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;" parent="C-vyLk0tnHw3VtMMgP7b-6" vertex="1">
          <mxGeometry x="30" width="220" height="30" as="geometry" />
        </mxCell>
        <mxCell id="C-vyLk0tnHw3VtMMgP7b-9" value="" style="shape=partialRectangle;collapsible=0;dropTarget=0;pointerEvents=0;fillColor=none;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="C-vyLk0tnHw3VtMMgP7b-2" vertex="1">
          <mxGeometry y="90" width="250" height="30" as="geometry" />
        </mxCell>
        <mxCell id="C-vyLk0tnHw3VtMMgP7b-10" value="" style="shape=partialRectangle;overflow=hidden;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;" parent="C-vyLk0tnHw3VtMMgP7b-9" vertex="1">
          <mxGeometry width="30" height="30" as="geometry" />
        </mxCell>
        <mxCell id="C-vyLk0tnHw3VtMMgP7b-11" value="order_date date NOT NULL" style="shape=partialRectangle;overflow=hidden;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;" parent="C-vyLk0tnHw3VtMMgP7b-9" vertex="1">
          <mxGeometry x="30" width="220" height="30" as="geometry" />
        </mxCell>
        <mxCell id="C-vyLk0tnHw3VtMMgP7b-13" value="Shipments" style="shape=table;startSize=30;container=1;collapsible=1;childLayout=tableLayout;fixedRows=1;rowLines=0;fontStyle=1;align=center;resizeLast=1;" parent="1" vertex="1">
          <mxGeometry x="450" y="280" width="250" height="130" as="geometry" />
        </mxCell>
        <mxCell id="C-vyLk0tnHw3VtMMgP7b-14" value="" style="shape=partialRectangle;collapsible=0;dropTarget=0;pointerEvents=0;fillColor=none;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=1;" parent="C-vyLk0tnHw3VtMMgP7b-13" vertex="1">
          <mxGeometry y="30" width="250" height="30" as="geometry" />
        </mxCell>
        <mxCell id="C-vyLk0tnHw3VtMMgP7b-15" value="PK" style="shape=partialRectangle;overflow=hidden;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;fontStyle=1;" parent="C-vyLk0tnHw3VtMMgP7b-14" vertex="1">
          <mxGeometry width="30" height="30" as="geometry" />
        </mxCell>
        <mxCell id="C-vyLk0tnHw3VtMMgP7b-16" value="shipment_id int NOT NULL " style="shape=partialRectangle;overflow=hidden;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;fontStyle=5;" parent="C-vyLk0tnHw3VtMMgP7b-14" vertex="1">
          <mxGeometry x="30" width="220" height="30" as="geometry" />
        </mxCell>
        <mxCell id="C-vyLk0tnHw3VtMMgP7b-17" value="" style="shape=partialRectangle;collapsible=0;dropTarget=0;pointerEvents=0;fillColor=none;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="C-vyLk0tnHw3VtMMgP7b-13" vertex="1">
          <mxGeometry y="60" width="250" height="30" as="geometry" />
        </mxCell>
        <mxCell id="C-vyLk0tnHw3VtMMgP7b-18" value="FK1" style="shape=partialRectangle;overflow=hidden;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;" parent="C-vyLk0tnHw3VtMMgP7b-17" vertex="1">
          <mxGeometry width="30" height="30" as="geometry" />
        </mxCell>
        <mxCell id="C-vyLk0tnHw3VtMMgP7b-19" value="order_id int NOT NULL" style="shape=partialRectangle;overflow=hidden;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;" parent="C-vyLk0tnHw3VtMMgP7b-17" vertex="1">
          <mxGeometry x="30" width="220" height="30" as="geometry" />
        </mxCell>
        <mxCell id="C-vyLk0tnHw3VtMMgP7b-20" value="" style="shape=partialRectangle;collapsible=0;dropTarget=0;pointerEvents=0;fillColor=none;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="C-vyLk0tnHw3VtMMgP7b-13" vertex="1">
          <mxGeometry y="90" width="250" height="30" as="geometry" />
        </mxCell>
        <mxCell id="C-vyLk0tnHw3VtMMgP7b-21" value="" style="shape=partialRectangle;overflow=hidden;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;" parent="C-vyLk0tnHw3VtMMgP7b-20" vertex="1">
          <mxGeometry width="30" height="30" as="geometry" />
        </mxCell>
        <mxCell id="C-vyLk0tnHw3VtMMgP7b-22" value="shipment_date date NOT NULL" style="shape=partialRectangle;overflow=hidden;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;" parent="C-vyLk0tnHw3VtMMgP7b-20" vertex="1">
          <mxGeometry x="30" width="220" height="30" as="geometry" />
        </mxCell>
        <mxCell id="C-vyLk0tnHw3VtMMgP7b-23" value="Customers" style="shape=table;startSize=30;container=1;collapsible=1;childLayout=tableLayout;fixedRows=1;rowLines=0;fontStyle=1;align=center;resizeLast=1;" parent="1" vertex="1">
          <mxGeometry x="120" y="120" width="250" height="100" as="geometry" />
        </mxCell>
        <mxCell id="C-vyLk0tnHw3VtMMgP7b-24" value="" style="shape=partialRectangle;collapsible=0;dropTarget=0;pointerEvents=0;fillColor=none;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=1;" parent="C-vyLk0tnHw3VtMMgP7b-23" vertex="1">
          <mxGeometry y="30" width="250" height="30" as="geometry" />
        </mxCell>
        <mxCell id="C-vyLk0tnHw3VtMMgP7b-25" value="PK" style="shape=partialRectangle;overflow=hidden;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;fontStyle=1;" parent="C-vyLk0tnHw3VtMMgP7b-24" vertex="1">
          <mxGeometry width="30" height="30" as="geometry" />
        </mxCell>
        <mxCell id="C-vyLk0tnHw3VtMMgP7b-26" value="customer_id int NOT NULL " style="shape=partialRectangle;overflow=hidden;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;fontStyle=5;" parent="C-vyLk0tnHw3VtMMgP7b-24" vertex="1">
          <mxGeometry x="30" width="220" height="30" as="geometry" />
        </mxCell>
        <mxCell id="C-vyLk0tnHw3VtMMgP7b-27" value="" style="shape=partialRectangle;collapsible=0;dropTarget=0;pointerEvents=0;fillColor=none;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="C-vyLk0tnHw3VtMMgP7b-23" vertex="1">
          <mxGeometry y="60" width="250" height="30" as="geometry" />
        </mxCell>
        <mxCell id="C-vyLk0tnHw3VtMMgP7b-28" value="" style="shape=partialRectangle;overflow=hidden;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;" parent="C-vyLk0tnHw3VtMMgP7b-27" vertex="1">
          <mxGeometry width="30" height="30" as="geometry" />
        </mxCell>
        <mxCell id="C-vyLk0tnHw3VtMMgP7b-29" value="customer_name char(50) NOT NULL" style="shape=partialRectangle;overflow=hidden;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;" parent="C-vyLk0tnHw3VtMMgP7b-27" vertex="1">
          <mxGeometry x="30" width="220" height="30" as="geometry" />
        </mxCell>
        <UserObject label="# サービス名&#xa;&#xa;あなたの「食べたい」を教えます。~何食べたい？の答えがここに~&#xa;&#xa;## サービス概要&#xa;「食べたい」欲望として、「ガッツリ」「さっぱり」、ジャンル(「中華」「イタリアン」etc)、「弁当にあと1品」など漠然と求めるものはあるけど、&#xa;何が食べたいか分からない/優柔不断で決められない/マンネリ化しててたまには違うものを食べたい&#xa;そんな時に後押ししてくれるサービス&#xa;&#xa;## このサービスへの思い・作りたい理由&#xa;・かつてスパイスメーカーで働いており、日々さまざまな香辛料や味の組み合わせを提案してきました。&#xa;&#xa;  しかし妻子と３人生活をしていて、自分も妻も料理をするが、朝昼晩と弁当のメニューがマンネリ化、&#xa;  外食も３件くらいをローテーションする日々でマンネリ化してきており、&#xa;  「何食べたい？」と聞いても答えが返ってこない、「何食べたい？」と聞かれても答えを返せない&#xa;  料理の知識はあっても、“決める”ことに疲れてしまう瞬間はある&#xa;  日々の食のマンネリ化を解消したく、このサービスを考案。&#xa;  (母親が言っていた「昼飯食べたら晩飯のこと考えなあかん」、父親の言っていた「どこ食べに行きたいんか言うてくれな回転寿司１択やで」の意味がやっと分かった。)&#xa;&#xa;・食材起点のレシピサイトはあっても、それは食べたいものや使いたい食材などある程度明確なイメージがある前提&#xa;　「ガッツリした/温かい/中華料理を食べたい」「さわやかな/夏にぴったりの/デザートが食べたい」などキーワードを選択して、自分の「食べたい」を教えてほしい。&#xa;&#xa;## ユーザー層について&#xa;### 料理のレパートリーの少ない20～30歳代夫婦&#xa;理由: レパートリーの少ない夫婦の日々の料理のマンネリ化解消のため&#xa;### 優柔不断で食べたいを決められない10～30歳代男女&#xa;理由: 食べたいものを聞かれた際の「欲望はあるけど何を食べたいか分からない」といったストレス解消(カップルの飲食店探しや家族の出先での急な外食時のアイデア出し)のため&#xa;&#xa;### ペルソナ&#xa;|項目|内容|&#xa;|---|---|&#xa;|**基本属性**| 年齢：30歳/性別：男/職業：公務員/家族構成：妻(28歳)、子(1歳)|&#xa;|**社会経済的状況**|年収：600万円/勤務先：官公庁|&#xa;|**興味・ライフスタイル**|休日の過ごし方：子どもとお出かけ/特性：料理好き|&#xa;|**購買行動**|新しいもの好き、トレンドへの感度高い|&#xa;|**目標・悩み**|日々の課題、悩み：毎日のご飯のマンネリ化を感じている|&#xa;&#xa;&#xa;## サービスの利用イメージ&#xa;MVP時点では「自宅で作る料理のマンネリ解消」を主目的とし、冷蔵庫の中身や気分に合わせておすすめ料理を提案することで、日々の献立決めのストレスを解消します。&#xa;将来的には「外食先の提案」にも対応予定です。&#xa;&#xa;- スーパーでの買い物中のメニュー決め&#xa;- 冷蔵庫とにらめっこしながらのあと１品決め&#xa;- 急に外食することになったときのサクッと検索（将来的に対応予定）&#xa;- 優柔不断じゃない男/女の演出&#xa;&#xa;⇒　迷う時間なく、最短５秒で自分の「食べたい」にたどり着ける（「食べたい」欲望選択⇒検索）&#xa;&#xa;## ユーザーの獲得について&#xa;・note,Qiita,Xでのポスト(固定)　※在職中のため特定されない程度でスタートを想定&#xa;&#xa;## サービスの差別化ポイント・推しポイント&#xa;### レシピアプリとの差別化&#xa;・基本的に食材起点の検索しかなく、漠然とした欲望「ガッツリ」「夏にぴったり」などはワード検索しかできない&#xa;・選択肢が多くなりすぎて、優柔不断な人にとっては、絞り切るストレスが発生する&#xa;・シーンを「朝」「昼」「夜」「おやつ」の4つ＋「未選択」で表示(初期表示は「未選択」)&#xa;&#xa;### 飲食店検索アプリとの差別化&#xa;・シーンやジャンル起点での選択となり、漠然とした欲望「ガッツリ」「夏にぴったり」などはワード検索しかできない&#xa;・選択肢が多くなりすぎて、優柔不断な人にとっては、絞り切るストレスが発生する&#xa;&#xa;### 推しポイント&#xa;・毎日３回も行う食事に悩むストレスを漠然とした欲望を選択するだけで簡単に叶えられる&#xa;・優柔不断な人にも選択肢を限定することにより、後押ししてもらえる&#xa;&#xa;## 機能候補&#xa;&#xa;### 本リリース（MVP）で実装予定の機能&#xa;* 欲望選択(ジャンル「ガッツリ」/「サッパリ」のみ)&#xa;* 食べたいもの結果…選んだ欲望をもとに食べたい料理名が検索結果として表示される&#xa;* 管理者画面（料理データ・タグ管理用）&#xa;#### MVP時要検討&#xa;* ユーザー登録（未登録でも利用可能）&#xa;* ログイン&#xa;* SNS投稿（X投稿：API連携も検討）&#xa;&#xa;#### ログイン・未ログインで使える機能&#xa;- 未ログイン：欲望選択・料理提案の利用が可能&#xa;- ログイン：上記に加え、個人の「食べたいもの」履歴の閲覧及び削除が可能&#xa;&#xa;#### 検索結果の表示数&#xa;- 優柔不断な方への配慮として、検索結果は1件のみ表示（ランダム抽出）し、選択肢を絞り込むことでストレスを軽減&#xa;&#xa;#### 表示される料理データの用意方法&#xa;- 管理者が事前に料理名・ジャンル・タグ等を登録し、データベース化&#xa;- あくまで管理者の主観的なタグ付とする&#xa;- MVP時点では手動登録、将来的に利用者によるタグ付や外部API連携も検討&#xa;&#xa;### 本リリース以後の拡張機能&#xa;* 詳細条件を複数選択&#xa;* 食べたいもの一覧(ユーザー)&#xa;* 食べたいものランキング(ユーザー/非ユーザー)&#xa;* 欲望一致・不一致選択(あなたの「食べたい」はこれだろ？ yes/no)&#xa;* Googleログイン&#xa;* 利用規約、プライバシーポリシー&#xa;&#xa;* 検索結果からGooglemap,食べログ,Cookpadで検索（外食対応時に実装予定）&#xa;* タグ付（acts-as-taggable-on等の導入検討）&#xa;* 一覧のページネーション（kaminari等）&#xa;* 検索後の「おすすめスパイス・調味料」など提案料理のタグ付をUIとして見せる&#xa;* パスワードリセット&#xa;* パスワード変更&#xa;* メールアドレス変更&#xa;&#xa;## 機能の実装方針予定&#xa;&#xa;### 本リリース（MVP）&#xa;* `rails g scaffold` コマンド生成&#xa;* `rails new myapp -d mysql`で基本的なRailsアプリ作成&#xa;* MySQL: 8.0.42&#xa;* ruby 3.2.3&#xa;* `gem &#39;rails&#39;, &#39;7.0.8.7&#39;`&#xa;* `gem &quot;ransack&quot;`　- 検索機能（1件ランダム出力）&#xa;* `gem &#39;bootstrap&#39;, &#39;~&amp;gt; 5.3&#39;` - UI作成&#xa;* `gem &#39;sassc-rails&#39;` - UI作成&#xa;* `gem &#39;rails-i18n&#39;, &#39;~&amp;gt; 7.0.0&#39;` - 日本語翻訳&#xa;* `gem &#39;enum_help&#39;, &#39;0.0.19&#39;` - enumのi18n化&#xa;* `gem &#39;draper&#39;, &#39;4.0.2&#39;` - ビュー用データ整形&#xa;* `gem &#39;carrierwave&#39;, &#39;2.2.2&#39;` - ファイルアップロード（管理者のみ）&#xa;* `gem &#39;turbo-rails&#39;` - 高速化・インタラクティブ化&#xa;* タグ付（管理者側で料理名にタグ付与）&#xa;&#xa;### 本リリース以後の拡張機能&#xa;* `gem &#39;acts-as-taggable-on&#39;` - タグ付（別の方法も検討）&#xa;* `gem &#39;twitter&#39;` - X API連携による投稿（API利用時に詳細設計）&#xa;* `gem &quot;devise&quot;`　- ユーザー登録、自動ログイン&#xa;* `gem &#39;geocoder&#39;` - GoogleMap連携（外食対応時）&#xa;* `gem &#39;kaminari&#39;` - ページネーション&#xa;&#xa;&amp;gt; X投稿について&#xa;&amp;gt; シェアボタンのみであればGem不要。API連携で自動投稿等を行う場合は`gem &#39;twitter&#39;`を利用予定。どちらを採用するかは今後検討。&#xa;&amp;gt; 投稿内容(検討中)`○○を食べたいんだけど、一緒にどう？` - 誰かと一緒に食べたいけど、食事の主導権を握られたくない時に有効&#xa;&#xa;### 技術一覧(追記中)&#xa;&#xa;フロントエンドフレームワーク&#xa;&#xa;フロントエンド言語&#xa;&#xa;![alt text](https___img.shields.io_badge_-JavaScript-000000.svg)&#xa;&#xa;バックエンドフレームワーク&#xa;&#xa;![alt text](https___img.shields.io_badge_-Rails-CC0000.svg)&#xa;&#xa;バックエンド言語&#xa;&#xa;![alt text](https___img.shields.io_badge_-Ruby-CC342D.svg)&#xa;&#xa;ミドルウェア&#xa;&#xa;インフラ&#xa;&#xa;![alt text](https___img.shields.io_badge_-Docker-1488C6.svg)&#xa;&#xa;その他&#xa;&#xa;(参考)https://qiita.com/shun198/items/c983c713452c041ef787&#xa;&#xa;### 画面遷移図&#xa;Figma：https://www.figma.com/board/rKWAuSJmOgPh76h9pCJSRf/%E7%84%A1%E9%A1%8C?node-id=12-666&amp;amp;t=QiY7fQXiWOO5L0Vn-1&#xa;&#xa;### READMEに記載した機能&#xa;- [○] ユーザー登録機能&#xa;- [○] ログイン機能&#xa;- [○] パスワード変更機能&#xa;- [○] メールアドレス変更機能&#xa;- [○] 記事投稿機能（画像投稿含む）- 「食べたい」検索&#xa;- [○] 記事閲覧機能（未ログインでも閲覧可能）- 履歴&#xa;- [×] 記事編集機能&#xa;- [○] 記事削除機能&#xa;- [×] コメント投稿機能&#xa;- [×] コメント閲覧機能（未ログインでも閲覧可能）&#xa;- [×] コメント編集機能&#xa;- [×] コメント削除機能&#xa;- [○] タグ投稿機能 - 管理者のみ(UI表示なし)&#xa;- [○] タグ編集機能 - 管理者のみ(UI表示なし)&#xa;- [○] タグ削除機能 - 管理者のみ(UI表示なし)&#xa;- [×] いいね機能&#xa;- [×] いいね解除機能&#xa;&#xa;### 未ログインでも閲覧または利用できるページ&#xa;以下の項目は適切に未ログインでも閲覧または利用できる画面遷移になっているか？&#xa;- [○] 記事投稿機能（画像投稿含む）- 「食べたい」検索&#xa;- [×] コメント閲覧機能（未ログインでも閲覧可能）&#xa;&#xa;### メールアドレス・パスワード変更確認項目&#xa;直接変更できるものではなく、一旦メールなどを介して専用のページで変更する画面遷移になっているか？&#xa;- [○] メールアドレス&#xa;- [○] パスワード&#xa;&#xa;### 各画面の作り込み&#xa;画面遷移だけでなく、必要なボタンやフォームが確認できるくらい作り込めているか？&#xa;- [○] 作り込みはある程度完了している（Figmaを見て画面の作成ができる状態にある）&#xa;&#xa;## 機能の実装方針予定&#xa;### MVP&#xa;・タグ付(管理者側で料理名に、欲望のタグを付与)&#xa;・gem ransack(検索機能)　⇒　１品だけ表示する場合、ランダム出力の必要があり&#xa;・gem devise(会員登録、ログイン)&#xa;&#xa;### その後の機能&#xa;・f.select または f.collection_select(欲望選択で使用)&#xa;・一覧(index)作成&#xa;・結果のSNS投稿&#xa;&amp;lt;%= link_to &#39;Twitter&#39;, &quot;https://twitter.com/share?url=#{request.url}&quot;, title: &#39;X&#39;, target: &#39;_blank&#39; %&amp;gt;&#xa;・Remember me(自動ログイン)&#xa;・Geocoder(Google連携)" link="# サービス名&#xa;&#xa;あなたの「食べたい」を教えます。~何食べたい？の答えがここに~&#xa;&#xa;## サービス概要&#xa;「食べたい」欲望として、「ガッツリ」「さっぱり」、ジャンル(「中華」「イタリアン」etc)、「弁当にあと1品」など漠然と求めるものはあるけど、&#xa;何が食べたいか分からない/優柔不断で決められない/マンネリ化しててたまには違うものを食べたい&#xa;そんな時に後押ししてくれるサービス&#xa;&#xa;## このサービスへの思い・作りたい理由&#xa;・かつてスパイスメーカーで働いており、日々さまざまな香辛料や味の組み合わせを提案してきました。&#xa;&#xa;  しかし妻子と３人生活をしていて、自分も妻も料理をするが、朝昼晩と弁当のメニューがマンネリ化、&#xa;  外食も３件くらいをローテーションする日々でマンネリ化してきており、&#xa;  「何食べたい？」と聞いても答えが返ってこない、「何食べたい？」と聞かれても答えを返せない&#xa;  料理の知識はあっても、“決める”ことに疲れてしまう瞬間はある&#xa;  日々の食のマンネリ化を解消したく、このサービスを考案。&#xa;  (母親が言っていた「昼飯食べたら晩飯のこと考えなあかん」、父親の言っていた「どこ食べに行きたいんか言うてくれな回転寿司１択やで」の意味がやっと分かった。)&#xa;&#xa;・食材起点のレシピサイトはあっても、それは食べたいものや使いたい食材などある程度明確なイメージがある前提&#xa;　「ガッツリした/温かい/中華料理を食べたい」「さわやかな/夏にぴったりの/デザートが食べたい」などキーワードを選択して、自分の「食べたい」を教えてほしい。&#xa;&#xa;## ユーザー層について&#xa;### 料理のレパートリーの少ない20～30歳代夫婦&#xa;理由: レパートリーの少ない夫婦の日々の料理のマンネリ化解消のため&#xa;### 優柔不断で食べたいを決められない10～30歳代男女&#xa;理由: 食べたいものを聞かれた際の「欲望はあるけど何を食べたいか分からない」といったストレス解消(カップルの飲食店探しや家族の出先での急な外食時のアイデア出し)のため&#xa;&#xa;### ペルソナ&#xa;|項目|内容|&#xa;|---|---|&#xa;|**基本属性**| 年齢：30歳/性別：男/職業：公務員/家族構成：妻(28歳)、子(1歳)|&#xa;|**社会経済的状況**|年収：600万円/勤務先：官公庁|&#xa;|**興味・ライフスタイル**|休日の過ごし方：子どもとお出かけ/特性：料理好き|&#xa;|**購買行動**|新しいもの好き、トレンドへの感度高い|&#xa;|**目標・悩み**|日々の課題、悩み：毎日のご飯のマンネリ化を感じている|&#xa;&#xa;&#xa;## サービスの利用イメージ&#xa;MVP時点では「自宅で作る料理のマンネリ解消」を主目的とし、冷蔵庫の中身や気分に合わせておすすめ料理を提案することで、日々の献立決めのストレスを解消します。&#xa;将来的には「外食先の提案」にも対応予定です。&#xa;&#xa;- スーパーでの買い物中のメニュー決め&#xa;- 冷蔵庫とにらめっこしながらのあと１品決め&#xa;- 急に外食することになったときのサクッと検索（将来的に対応予定）&#xa;- 優柔不断じゃない男/女の演出&#xa;&#xa;⇒　迷う時間なく、最短５秒で自分の「食べたい」にたどり着ける（「食べたい」欲望選択⇒検索）&#xa;&#xa;## ユーザーの獲得について&#xa;・note,Qiita,Xでのポスト(固定)　※在職中のため特定されない程度でスタートを想定&#xa;&#xa;## サービスの差別化ポイント・推しポイント&#xa;### レシピアプリとの差別化&#xa;・基本的に食材起点の検索しかなく、漠然とした欲望「ガッツリ」「夏にぴったり」などはワード検索しかできない&#xa;・選択肢が多くなりすぎて、優柔不断な人にとっては、絞り切るストレスが発生する&#xa;・シーンを「朝」「昼」「夜」「おやつ」の4つ＋「未選択」で表示(初期表示は「未選択」)&#xa;&#xa;### 飲食店検索アプリとの差別化&#xa;・シーンやジャンル起点での選択となり、漠然とした欲望「ガッツリ」「夏にぴったり」などはワード検索しかできない&#xa;・選択肢が多くなりすぎて、優柔不断な人にとっては、絞り切るストレスが発生する&#xa;&#xa;### 推しポイント&#xa;・毎日３回も行う食事に悩むストレスを漠然とした欲望を選択するだけで簡単に叶えられる&#xa;・優柔不断な人にも選択肢を限定することにより、後押ししてもらえる&#xa;&#xa;## 機能候補&#xa;&#xa;### 本リリース（MVP）で実装予定の機能&#xa;* 欲望選択(ジャンル「ガッツリ」/「サッパリ」のみ)&#xa;* 食べたいもの結果…選んだ欲望をもとに食べたい料理名が検索結果として表示される&#xa;* 管理者画面（料理データ・タグ管理用）&#xa;#### MVP時要検討&#xa;* ユーザー登録（未登録でも利用可能）&#xa;* ログイン&#xa;* SNS投稿（X投稿：API連携も検討）&#xa;&#xa;#### ログイン・未ログインで使える機能&#xa;- 未ログイン：欲望選択・料理提案の利用が可能&#xa;- ログイン：上記に加え、個人の「食べたいもの」履歴の閲覧及び削除が可能&#xa;&#xa;#### 検索結果の表示数&#xa;- 優柔不断な方への配慮として、検索結果は1件のみ表示（ランダム抽出）し、選択肢を絞り込むことでストレスを軽減&#xa;&#xa;#### 表示される料理データの用意方法&#xa;- 管理者が事前に料理名・ジャンル・タグ等を登録し、データベース化&#xa;- あくまで管理者の主観的なタグ付とする&#xa;- MVP時点では手動登録、将来的に利用者によるタグ付や外部API連携も検討&#xa;&#xa;### 本リリース以後の拡張機能&#xa;* 詳細条件を複数選択&#xa;* 食べたいもの一覧(ユーザー)&#xa;* 食べたいものランキング(ユーザー/非ユーザー)&#xa;* 欲望一致・不一致選択(あなたの「食べたい」はこれだろ？ yes/no)&#xa;* Googleログイン&#xa;* 利用規約、プライバシーポリシー&#xa;&#xa;* 検索結果からGooglemap,食べログ,Cookpadで検索（外食対応時に実装予定）&#xa;* タグ付（acts-as-taggable-on等の導入検討）&#xa;* 一覧のページネーション（kaminari等）&#xa;* 検索後の「おすすめスパイス・調味料」など提案料理のタグ付をUIとして見せる&#xa;* パスワードリセット&#xa;* パスワード変更&#xa;* メールアドレス変更&#xa;&#xa;## 機能の実装方針予定&#xa;&#xa;### 本リリース（MVP）&#xa;* `rails g scaffold` コマンド生成&#xa;* `rails new myapp -d mysql`で基本的なRailsアプリ作成&#xa;* MySQL: 8.0.42&#xa;* ruby 3.2.3&#xa;* `gem &#39;rails&#39;, &#39;7.0.8.7&#39;`&#xa;* `gem &quot;ransack&quot;`　- 検索機能（1件ランダム出力）&#xa;* `gem &#39;bootstrap&#39;, &#39;~&amp;gt; 5.3&#39;` - UI作成&#xa;* `gem &#39;sassc-rails&#39;` - UI作成&#xa;* `gem &#39;rails-i18n&#39;, &#39;~&amp;gt; 7.0.0&#39;` - 日本語翻訳&#xa;* `gem &#39;enum_help&#39;, &#39;0.0.19&#39;` - enumのi18n化&#xa;* `gem &#39;draper&#39;, &#39;4.0.2&#39;` - ビュー用データ整形&#xa;* `gem &#39;carrierwave&#39;, &#39;2.2.2&#39;` - ファイルアップロード（管理者のみ）&#xa;* `gem &#39;turbo-rails&#39;` - 高速化・インタラクティブ化&#xa;* タグ付（管理者側で料理名にタグ付与）&#xa;&#xa;### 本リリース以後の拡張機能&#xa;* `gem &#39;acts-as-taggable-on&#39;` - タグ付（別の方法も検討）&#xa;* `gem &#39;twitter&#39;` - X API連携による投稿（API利用時に詳細設計）&#xa;* `gem &quot;devise&quot;`　- ユーザー登録、自動ログイン&#xa;* `gem &#39;geocoder&#39;` - GoogleMap連携（外食対応時）&#xa;* `gem &#39;kaminari&#39;` - ページネーション&#xa;&#xa;&amp;gt; X投稿について&#xa;&amp;gt; シェアボタンのみであればGem不要。API連携で自動投稿等を行う場合は`gem &#39;twitter&#39;`を利用予定。どちらを採用するかは今後検討。&#xa;&amp;gt; 投稿内容(検討中)`○○を食べたいんだけど、一緒にどう？` - 誰かと一緒に食べたいけど、食事の主導権を握られたくない時に有効&#xa;&#xa;### 技術一覧(追記中)&#xa;&#xa;フロントエンドフレームワーク&#xa;&#xa;フロントエンド言語&#xa;&#xa;![alt text](https___img.shields.io_badge_-JavaScript-000000.svg)&#xa;&#xa;バックエンドフレームワーク&#xa;&#xa;![alt text](https___img.shields.io_badge_-Rails-CC0000.svg)&#xa;&#xa;バックエンド言語&#xa;&#xa;![alt text](https___img.shields.io_badge_-Ruby-CC342D.svg)&#xa;&#xa;ミドルウェア&#xa;&#xa;インフラ&#xa;&#xa;![alt text](https___img.shields.io_badge_-Docker-1488C6.svg)&#xa;&#xa;その他&#xa;&#xa;(参考)https://qiita.com/shun198/items/c983c713452c041ef787&#xa;&#xa;### 画面遷移図&#xa;Figma：https://www.figma.com/board/rKWAuSJmOgPh76h9pCJSRf/%E7%84%A1%E9%A1%8C?node-id=12-666&amp;amp;t=QiY7fQXiWOO5L0Vn-1&#xa;&#xa;### READMEに記載した機能&#xa;- [○] ユーザー登録機能&#xa;- [○] ログイン機能&#xa;- [○] パスワード変更機能&#xa;- [○] メールアドレス変更機能&#xa;- [○] 記事投稿機能（画像投稿含む）- 「食べたい」検索&#xa;- [○] 記事閲覧機能（未ログインでも閲覧可能）- 履歴&#xa;- [×] 記事編集機能&#xa;- [○] 記事削除機能&#xa;- [×] コメント投稿機能&#xa;- [×] コメント閲覧機能（未ログインでも閲覧可能）&#xa;- [×] コメント編集機能&#xa;- [×] コメント削除機能&#xa;- [○] タグ投稿機能 - 管理者のみ(UI表示なし)&#xa;- [○] タグ編集機能 - 管理者のみ(UI表示なし)&#xa;- [○] タグ削除機能 - 管理者のみ(UI表示なし)&#xa;- [×] いいね機能&#xa;- [×] いいね解除機能&#xa;&#xa;### 未ログインでも閲覧または利用できるページ&#xa;以下の項目は適切に未ログインでも閲覧または利用できる画面遷移になっているか？&#xa;- [○] 記事投稿機能（画像投稿含む）- 「食べたい」検索&#xa;- [×] コメント閲覧機能（未ログインでも閲覧可能）&#xa;&#xa;### メールアドレス・パスワード変更確認項目&#xa;直接変更できるものではなく、一旦メールなどを介して専用のページで変更する画面遷移になっているか？&#xa;- [○] メールアドレス&#xa;- [○] パスワード&#xa;&#xa;### 各画面の作り込み&#xa;画面遷移だけでなく、必要なボタンやフォームが確認できるくらい作り込めているか？&#xa;- [○] 作り込みはある程度完了している（Figmaを見て画面の作成ができる状態にある）&#xa;&#xa;## 機能の実装方針予定&#xa;### MVP&#xa;・タグ付(管理者側で料理名に、欲望のタグを付与)&#xa;・gem ransack(検索機能)　⇒　１品だけ表示する場合、ランダム出力の必要があり&#xa;・gem devise(会員登録、ログイン)&#xa;&#xa;### その後の機能&#xa;・f.select または f.collection_select(欲望選択で使用)&#xa;・一覧(index)作成&#xa;・結果のSNS投稿&#xa;&amp;lt;%= link_to &#39;Twitter&#39;, &quot;https://twitter.com/share?url=#{request.url}&quot;, title: &#39;X&#39;, target: &#39;_blank&#39; %&amp;gt;&#xa;・Remember me(自動ログイン)&#xa;・Geocoder(Google連携)" id="YB1I3emS7GH-filBPC7L-1">
          <mxCell style="text;whiteSpace=wrap;html=1;" vertex="1" parent="1">
            <mxGeometry x="160" y="450" width="560" height="3290" as="geometry" />
          </mxCell>
        </UserObject>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
